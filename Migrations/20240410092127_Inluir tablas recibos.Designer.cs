// <auto-generated />
using System;
using Gestfin;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestfin.Migrations
{
    [DbContext(typeof(MainDB))]
    [Migration("20240410092127_Inluir tablas recibos")]
    partial class Inluirtablasrecibos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gestfin.Models.Comunidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("Gestfin.Models.Concepto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComunidadId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepartoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadId")
                        .IsUnique();

                    b.ToTable("Conceptos");
                });

            modelBuilder.Entity("Gestfin.Models.ParticipacionReparto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComunidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Participacion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("RepartoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("ParticipacionRepartos");
                });

            modelBuilder.Entity("Gestfin.Models.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComundiadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("Gestfin.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("Gestfin.Models.PropietariosPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Coeficiente")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.HasIndex("PropietarioId")
                        .IsUnique();

                    b.ToTable("PropietariosPropiedades");
                });

            modelBuilder.Entity("Gestfin.Models.Recibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComunidadId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Importe")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recibo");
                });

            modelBuilder.Entity("Gestfin.Models.ReciboDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Importe")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("ReciboId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReciboId")
                        .IsUnique();

                    b.ToTable("ReciboDetalle");
                });

            modelBuilder.Entity("Gestfin.Models.ReciboHistoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoFinal")
                        .HasColumnType("int");

                    b.Property<int>("EstadoInicial")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReciboId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReciboId")
                        .IsUnique();

                    b.ToTable("ReciboHistoria");
                });

            modelBuilder.Entity("Gestfin.Models.ReciboPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Importe")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("ReciboId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReciboId")
                        .IsUnique();

                    b.ToTable("ReciboPago");
                });

            modelBuilder.Entity("Gestfin.Models.Reparto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComunidadId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Enteros")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadId")
                        .IsUnique();

                    b.ToTable("Repartos");
                });

            modelBuilder.Entity("Gestfin.Models.Comunidad", b =>
                {
                    b.OwnsOne("Gestfin.Models.Domicilio", "Domicilio", b1 =>
                        {
                            b1.Property<int>("ComunidadId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Piso")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Portal")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Puerta")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("TipoVia")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.HasKey("ComunidadId");

                            b1.ToTable("Comunidades");

                            b1.WithOwner()
                                .HasForeignKey("ComunidadId");
                        });

                    b.Navigation("Domicilio")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Concepto", b =>
                {
                    b.HasOne("Gestfin.Models.Comunidad", null)
                        .WithOne("Conceptos")
                        .HasForeignKey("Gestfin.Models.Concepto", "ComunidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.ParticipacionReparto", b =>
                {
                    b.HasOne("Gestfin.Models.Propiedad", null)
                        .WithOne("Repartos")
                        .HasForeignKey("Gestfin.Models.ParticipacionReparto", "PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Propiedad", b =>
                {
                    b.OwnsOne("Gestfin.Models.Domicilio", "Domicilio", b1 =>
                        {
                            b1.Property<int>("PropiedadId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Piso")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Portal")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Puerta")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("TipoVia")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.HasKey("PropiedadId");

                            b1.ToTable("Propiedades");

                            b1.WithOwner()
                                .HasForeignKey("PropiedadId");
                        });

                    b.Navigation("Domicilio")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Propietario", b =>
                {
                    b.OwnsOne("Gestfin.Models.Domicilio", "Domicilio", b1 =>
                        {
                            b1.Property<int>("PropietarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Piso")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Portal")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Puerta")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("TipoVia")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.HasKey("PropietarioId");

                            b1.ToTable("Propietarios");

                            b1.WithOwner()
                                .HasForeignKey("PropietarioId");
                        });

                    b.Navigation("Domicilio")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.PropietariosPropiedad", b =>
                {
                    b.HasOne("Gestfin.Models.Propiedad", null)
                        .WithOne("Propietarios")
                        .HasForeignKey("Gestfin.Models.PropietariosPropiedad", "PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestfin.Models.Propietario", null)
                        .WithOne("Propiedades")
                        .HasForeignKey("Gestfin.Models.PropietariosPropiedad", "PropietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.ReciboDetalle", b =>
                {
                    b.HasOne("Gestfin.Models.Recibo", null)
                        .WithOne("Detalles")
                        .HasForeignKey("Gestfin.Models.ReciboDetalle", "ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.ReciboHistoria", b =>
                {
                    b.HasOne("Gestfin.Models.Recibo", null)
                        .WithOne("Historial")
                        .HasForeignKey("Gestfin.Models.ReciboHistoria", "ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.ReciboPago", b =>
                {
                    b.HasOne("Gestfin.Models.Recibo", null)
                        .WithOne("Pago")
                        .HasForeignKey("Gestfin.Models.ReciboPago", "ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Reparto", b =>
                {
                    b.HasOne("Gestfin.Models.Comunidad", null)
                        .WithOne("Repartos")
                        .HasForeignKey("Gestfin.Models.Reparto", "ComunidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Comunidad", b =>
                {
                    b.Navigation("Conceptos")
                        .IsRequired();

                    b.Navigation("Repartos")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Propiedad", b =>
                {
                    b.Navigation("Propietarios")
                        .IsRequired();

                    b.Navigation("Repartos")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Propietario", b =>
                {
                    b.Navigation("Propiedades")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestfin.Models.Recibo", b =>
                {
                    b.Navigation("Detalles")
                        .IsRequired();

                    b.Navigation("Historial")
                        .IsRequired();

                    b.Navigation("Pago")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
